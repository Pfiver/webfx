<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>naga-javaemuls</artifactId>
        <groupId>naga</groupId>
        <version>0.1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>naga-javaemul-teavm</artifactId>

    <!-- Module to extend TeaVM java emulation. There are 2 cases:
    1) Adding new java classes that don't exist in the teavm-classlib
       * In this case, put the class under javaemul package and the shade plugin will relocate it to java package
       * Edit the naga-plat-teavm pom to relocate this class under org.teavm.classlib and prefix it with T
    2) Extending java classes that already exist in the teavm-classlib
       In this case, copy the initial teavm-classlib (prefixed with T) under org.teavm.classlib in this module
       and add the new methods to emulate to it.
     -->

    <dependencies>
        <!-- Emulator of Java class library for TeaVM -->
        <!-- Needed only for case 2) so new naga T classes can refer to existing TeaVM T classes  -->
        <dependency>
            <groupId>org.teavm</groupId>
            <artifactId>teavm-classlib</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <properties>
        <!-- Disabling the default behaviour defined in the parent pom for the shade plugin -->
        <plugin.shade.param.fat.phase>none</plugin.shade.param.fat.phase>
    </properties>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <!-- Relocating the javaemul package to java for both classes and sources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
            </plugin>

        </plugins>

    </build>

</project>